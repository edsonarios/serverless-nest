name: Deploy AWS Serverless API Medy

on:
  pull_request:
    types:
      - closed
    branches:
      - develop
      - release
      - staging
      - main
  workflow_dispatch:
    inputs:
      reason:
        description: 'Razón del despliegue'
        required: true
        default: 'Despliegue manual solo rama feature/..'
  push:
    branches:
    - test

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    
    env:
      AWS_ACCESS_KEY_ID: ${{ (github.event.pull_request.base.ref == 'main') && secrets.AWS_ACCESS_KEY_ID_PROD || (github.event.pull_request.base.ref == 'staging') && secrets.AWS_ACCESS_KEY_ID_STAGING || secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ (github.event.pull_request.base.ref == 'main') && secrets.AWS_SECRET_ACCESS_KEY_PROD || (github.event.pull_request.base.ref == 'staging') && secrets.AWS_SECRET_ACCESS_KEY_STAGING || secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      DEPLOY_PREFIX: ${{ (github.event.pull_request.base.ref == 'main') && 'prod' || (github.event.pull_request.base.ref == 'staging') && 'staging' || 'dev' }}
    
    steps:
      - name: Check branch name for manual dispatch
        if: github.event_name == 'workflow_dispatch' && !startsWith(github.ref, 'refs/heads/feature/')
        run: |
          echo "Error: Despliegues manuales sólo están permitidos desde ramas feature/*"
          exit 1

      # - uses: actions/checkout@v3
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      # - run: npm ci
      # - run: npm run build --if-present

      # - name: Prepare Serverless Deploy Command
      #   run: echo "SLS_DEPLOY_COMMAND=deploy --stage $DEPLOY_PREFIX --verbose" >> $GITHUB_ENV

      # - name: serverless deploy
      #   uses: serverless/github-action@v3.2
      #   with:
      #     args: ${{ env.SLS_DEPLOY_COMMAND }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2

      - run: ls
      - run: ls -la ./scripts/



      - name: Configure API Gateway Rate Limiting
        run: |
          API_NAME="apigw-${{ env.DEPLOY_PREFIX }}-cs-apigateway-medy-01"
          echo "API Name: $API_NAME"
          API_ID=$(aws apigateway get-rest-apis --query "items[?name==\`${API_NAME}\`].id" --output text)
          echo "API ID: $API_ID"
          sh ./scripts/configure-api-gateway.sh $API_ID ${{ env.DEPLOY_PREFIX }} 25 15

